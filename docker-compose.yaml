services:
  backdb:
    container_name: backdb
    image: postgres:alpine
    env_file:
      - ./env/backdb.env
    volumes:
      - ./sql/backdb-sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h backdb -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 2s
      start_interval: 1s
  backend:
    container_name: backend
    image: ghcr.io/team-base64/edu-crm-backend-app:latest
    depends_on:
      backdb:
        condition: service_healthy
      chat:
        condition: service_started
    env_file:
      - ./env/backend.env
      - ./env/backdb.env
    ports:
      - 8080:8080
    volumes:
      - ./artifacts/backend-files:/artifacts
      - ./store/backend-storage:/filestorage
  chat:
    container_name: chat
    hostname: chat
    image: ghcr.io/team-base64/edu-crm-chat-service-app:latest
    depends_on:
      backdb:
        condition: service_healthy
    env_file:
      - ./env/chat-service.env
      - ./env/backdb.env
    ports:
      - 8081:8081
    volumes:
      - ./store/backend-storage:/filestorage
  tgdb:
    container_name: tgdb
    image: postgres:alpine
    volumes:
      - ./sql/tgdb-sql:/docker-entrypoint-initdb.d/
    env_file:
      - env/tgdb.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h tgdb -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 2s
      start_interval: 1s
  tg:
    container_name: tg
    image: ghcr.io/team-base64/edu-crm-tg-bots-app:latest
    depends_on:
        tgdb:
            condition: service_healthy
        chat:
          condition: service_started
    env_file:
        - ./env/tg-bots.env
        - ./env/tgdb.env
    restart: unless-stopped
  vkdb:
    container_name: vkdb
    image: postgres:alpine
    volumes:
      - ./sql/vkdb-sql:/docker-entrypoint-initdb.d/
    env_file:
      - ./env/vkdb.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h vkdb -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 2s
      start_interval: 1s
  vk:
    container_name: vk
    image: ghcr.io/team-base64/edu-crm-vk-bots-app:latest
    depends_on:
      vkdb:
        condition: service_healthy
      chat:
        condition: service_started
    env_file:
      - ./env/vk-bots.env
      - ./env/vkdb.env
    restart: unless-stopped
